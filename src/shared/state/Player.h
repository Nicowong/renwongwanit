// Generated by dia2code
#ifndef STATE__PLAYER__H
#define STATE__PLAYER__H

#include <vector>
#include <memory>

namespace state {
  class Building;
  class Unit;
}

#include "Building.h"
#include "Unit.h"

namespace state {

  /// class Player - 
  class Player {
    // Associations
    // Attributes
  protected:
    int PlayerID;
    std::vector<std::unique_ptr<Unit>> unitList;
    std::vector<std::unique_ptr<Building>> buildingList;
    // Operations
  public:
    Building* getBuilding (int i);
    Unit* getUnit (int i);
    // Setters and Getters
    int getPlayerID() const;
    void setPlayerID(int PlayerID);
    const std::vector<std::unique_ptr<Unit>>& getUnitList() const;
    void setUnitList(const std::vector<std::unique_ptr<Unit>>& unitList);
    const std::vector<std::unique_ptr<Building>>& getBuildingList() const;
    void setBuildingList(const std::vector<std::unique_ptr<Building>>& buildingList);
  };

};

#endif
